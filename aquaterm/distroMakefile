ifndef $(BUILD_DIR)
BUILD_DIR=$(BUILT_PRODUCTS_DIR)
endif

PACKAGE=AquaTerm
VERSION=1.0.1
##RELEASENAME=AquaTerm1.0.b3
RELEASENAME=$(PACKAGE)$(VERSION)

## Stage the release files
## -----------------------
PKG_ROOT=$(SYMROOT)/pkg_root
DMG_ROOT=$(SYMROOT)/dmg_root
EXTRAS_DEST="$(DMG_ROOT)/Developer Extras"
ADAPT_DEST=$(EXTRAS_DEST)/adapters
## Get the source directories
## --------------------------
APPSRCDIR=$(SRCROOT)
HELPDIR=$(SRCROOT)/Help
ADAPTSRCDIR=$(SRCROOT)/../adapters

all:pre dmg post

pkg: app lib fwk headers
	freeze -v $(APPSRCDIR)/installer/installer.packproj

dmg: adapters info doc pkg
	#hdiutil create -volname AquaTerm -fs HFS+ -srcfolder $(DMG_ROOT) $(BUILD_DIR)/$(RELEASENAME).dmg
	#hdiutil create -volname $(RELEASENAME) -fs HFS+ -srcfolder $(DMG_ROOT) $(BUILD_DIR)/$(RELEASENAME).dmg
	dropdmg -v $(RELEASENAME) -b $(RELEASENAME) -o $(BUILD_DIR) $(DMG_ROOT)

pre: clean
	@echo "SYMROOT is " $(SYMROOT) ", cleaning out..."
	rm -rf $(SYMROOT)
	@echo "BUILD_DIR is " $(BUILD_DIR)
	mkdir -p $(PKG_ROOT)
	mkdir -p $(DMG_ROOT)

post:
	ls -Rp $(DMG_ROOT) 

app:
	xcodebuild -target AQTFwk clean -configuration Deployment
	xcodebuild -target AquaTerm clean -configuration Deployment
	xcodebuild -target AquaTerm -configuration Deployment
	cp -RPf $(BUILD_DIR)/AquaTerm.app $(PKG_ROOT)/.

fwk:
	cp -RPf $(BUILD_DIR)/AquaTerm.framework $(PKG_ROOT)/.

lib:
	@echo "lib is just links to framework..."

headers:
	@echo "headers are just links to framework..."

adapters:c fortran gnuplot pgplot plplot python perl lisp

info:
	cp $(APPSRCDIR)/{ReadMe.rtf,ReleaseNotes} $(DMG_ROOT)/.

doc:
	cp -RPf $(HELPDIR)/{AQTAdapter.html,DevDocs.rtfd} $(EXTRAS_DEST)/.

help:
	@echo "Skipping help..."

clean:
	-rm -rf $(PKG_ROOT)
	-rm -rf $(DMG_ROOT)
	-rm -rf $(BUILD_DIR)/$(RELEASENAME).dmg

## -------------------------
## - adapters
## -------------------------
c:
	mkdir -p $(ADAPT_DEST)/c
	cp $(ADAPTSRCDIR)/c/{demo.c,eventdemo1.c,eventdemo2.c,Makefile,ReadMe,ReleaseNotes} $(ADAPT_DEST)/c/.

fortran:
	mkdir -p $(ADAPT_DEST)/fortran
	cp $(ADAPTSRCDIR)/fortran/{demo.f,eventdemo1.f,f2aquaterm.m,Makefile,ReadMe,ReleaseNotes} $(ADAPT_DEST)/fortran/.

gnuplot:
	mkdir -p $(ADAPT_DEST)/gnuplot
	cp $(ADAPTSRCDIR)/gnuplot/{ReadMe,ReleaseNotes} $(ADAPT_DEST)/gnuplot/.

pgplot:
	mkdir -p $(ADAPT_DEST)/pgplot
	cp $(ADAPTSRCDIR)/pgplot/{aqdriv.m,g77_gcc_AQT.conf,xlf_gcc_AQT.conf,ReadMe,ReleaseNotes} $(ADAPT_DEST)/pgplot/.

plplot:
	mkdir -p $(ADAPT_DEST)/plplot
	cp $(ADAPTSRCDIR)/plplot/{ReadMe,ReleaseNotes} $(ADAPT_DEST)/plplot/.

python:
	mkdir -p $(ADAPT_DEST)/python
	cp $(ADAPTSRCDIR)/python/{demo.py,ReadMe,ReleaseNotes} $(ADAPT_DEST)/python/.

perl:
	mkdir -p $(ADAPT_DEST)/perl
	cp $(ADAPTSRCDIR)/perl/{AquaTerm.pm,AquaTerm.xs,Changes,HOW_TO_USE,MANIFEST,Makefile.PL,README,ppport.h,typemap} $(ADAPT_DEST)/perl/.

lisp:
	mkdir -p $(ADAPT_DEST)/lisp
	cp $(ADAPTSRCDIR)/lisp/{cl-aqt.asd,cl-aqt.lisp,README} $(ADAPT_DEST)/lisp/.
